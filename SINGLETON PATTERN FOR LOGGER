using System;

public sealed class Logger
{
    // Step 1: Private static instance variable to hold the single instance
    private static Logger _instance;

    // Step 2: Private constructor to prevent external instantiation
    private Logger()
    {
    }

    // Step 3: Public static method to get the single instance
    public static Logger GetInstance()
    {
        if (_instance == null)
        {
            _instance = new Logger();
        }
        return _instance;
    }

    // Public method to log messages
    public void Log(string message)
    {
        Console.WriteLine($"[Log]: {message}");
    }
}

class Program
{
    static void Main(string[] args)
    {
        // Step 4: Using the Logger in the Main method
        Logger logger = Logger.GetInstance();
        logger.Log("This is a log message from the Logger.");

        // Step 5: Demonstrate that the same instance is returned
        Logger anotherLogger = Logger.GetInstance();
        Console.WriteLine($"Are logger and anotherLogger the same instance? {ReferenceEquals(logger, anotherLogger)}");
    }
}

